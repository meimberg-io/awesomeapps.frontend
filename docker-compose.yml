# Unified docker-compose.yml for both local development and production deployment
x-app-base: &app-base
  build:
    context: .
    dockerfile: Dockerfile
    args:
      NEXT_PUBLIC_STRAPI_BASEURL: ${NEXT_PUBLIC_STRAPI_BASEURL}
      NEXT_PUBLIC_APP_BASEURL: ${NEXT_PUBLIC_APP_BASEURL}
      NEXT_PUBLIC_MATOMO_TRACKER: ${NEXT_PUBLIC_MATOMO_TRACKER:-false}
  ports:
    - "${APP_PORT}:5680"
  environment:
    - NODE_ENV=${NODE_ENV:-development}
    - PORT=5680
    - NEXT_PUBLIC_STRAPI_BASEURL=${NEXT_PUBLIC_STRAPI_BASEURL}
    - NEXT_PUBLIC_APP_BASEURL=${NEXT_PUBLIC_APP_BASEURL}
    - NEXT_PUBLIC_MATOMO_TRACKER=${NEXT_PUBLIC_MATOMO_TRACKER:-false}
    - REVALIDATE_SECRET=${REVALIDATE_SECRET}
  restart: unless-stopped
  networks:
    - app-network
  healthcheck:
    test: ["CMD", "node", "-e", "require('http').get('http://localhost:5680/', (res) => process.exit(res.statusCode === 200 ? 0 : 1)).on('error', () => process.exit(1))"]
    interval: 30s
    timeout: 10s
    retries: 3
    start_period: 40s

services:
  # Development service with volume mounts
  app-dev:
    <<: *app-base
    profiles: ["dev"]
    volumes:
      - ./src:/app/src:ro
      - ./public:/app/public:ro
      - ./next.config.js:/app/next.config.js:ro
      - ./tailwind.config.js:/app/tailwind.config.js:ro
      - ./postcss.config.js:/app/postcss.config.js:ro
      - ./tsconfig.json:/app/tsconfig.json:ro
      - ./graphql.config.yml:/app/graphql.config.yml:ro
      - /app/node_modules

  # Production service without volume mounts
  app-prod:
    <<: *app-base
    profiles: ["prod"]

  

networks:
  app-network:
    driver: bridge

