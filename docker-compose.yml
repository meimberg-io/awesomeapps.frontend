# Unified docker-compose.yml for both local development and production deployment
services:
  # Base service definition (template only - never instantiated)
  app-base:
    profiles: ["base"]  # Dummy profile to prevent instantiation
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_STRAPI_BASEURL: ${NEXT_PUBLIC_STRAPI_BASEURL}
        NEXT_PUBLIC_APP_BASEURL: ${NEXT_PUBLIC_APP_BASEURL}
        NEXT_PUBLIC_MATOMO_TRACKER: ${NEXT_PUBLIC_MATOMO_TRACKER:-false}
    ports:
      - "${APP_PORT}:5680"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=5680
      - NEXT_PUBLIC_STRAPI_BASEURL=${NEXT_PUBLIC_STRAPI_BASEURL}
      - NEXT_PUBLIC_APP_BASEURL=${NEXT_PUBLIC_APP_BASEURL}
      - NEXT_PUBLIC_MATOMO_TRACKER=${NEXT_PUBLIC_MATOMO_TRACKER:-false}
      - REVALIDATE_SECRET=${REVALIDATE_SECRET}
      - AUTH_SECRET=${AUTH_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - OAUTH_GOOGLE_CLIENT_ID=${OAUTH_GOOGLE_CLIENT_ID}
      - OAUTH_GOOGLE_CLIENT_SECRET=${OAUTH_GOOGLE_CLIENT_SECRET}
      - OAUTH_GITHUB_CLIENT_ID=${OAUTH_GITHUB_CLIENT_ID}
      - OAUTH_GITHUB_CLIENT_SECRET=${OAUTH_GITHUB_CLIENT_SECRET}
      - OAUTH_AZURE_AD_CLIENT_ID=${OAUTH_AZURE_AD_CLIENT_ID}
      - OAUTH_AZURE_AD_CLIENT_SECRET=${OAUTH_AZURE_AD_CLIENT_SECRET}
      - OAUTH_AZURE_AD_TENANT_ID=${OAUTH_AZURE_AD_TENANT_ID}
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5680/', (res) => process.exit(res.statusCode === 200 ? 0 : 1)).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Development service with volume mounts
  app-dev:
    profiles: ["dev"]
    extends: app-base
    volumes:
      - ./src:/app/src:ro
      - ./public:/app/public:ro
      - ./next.config.js:/app/next.config.js:ro
      - ./tailwind.config.js:/app/tailwind.config.js:ro
      - ./postcss.config.js:/app/postcss.config.js:ro
      - ./tsconfig.json:/app/tsconfig.json:ro
      - ./graphql.config.yml:/app/graphql.config.yml:ro
      - /app/node_modules

  # Production service without volume mounts
  app-prod:
    profiles: ["prod"]
    extends: app-base

  

networks:
  app-network:
    driver: bridge

